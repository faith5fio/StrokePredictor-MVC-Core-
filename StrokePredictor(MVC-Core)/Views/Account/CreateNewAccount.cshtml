@model StrokePredictor_MVC_Core_.Models.SignUpModel 
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Sign Up!</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link href="~/css/generalStyle.css" rel="stylesheet" />
    <link href="~/css/MobileStyles.css" rel="stylesheet" />
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="admin-card form-horizontal">
            <h1>Sign Up</h1>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-row-group">
                <div class="col-flex">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Firstname" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-flex">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Lastname" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-row-group ">
                <div class="col-flex">
                    @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Age" } })
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-flex">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Gender" } })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Email" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.EditorFor(model => model.Password, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                   @placeholder = "Enter Password",
                            @id = "password"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger", @id = "passValidMessage" })
                </div>
            </div>
            <div class="form-group">
                <label for="ConfPass" class="col-form-label">Confirm Password</label>
                <div>
                    <input type="password" placeholder="Confirm Password" id="ConfPass" class="form-control" />
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="btn-container">
                @*<div class="col-md-offset-2 col-md-10">*@
                <input onclick="validatePasswords()" type="submit" value="Sign Me Up" class="btn btn-hero" />
                @*</div>*@
            </div>

            <div>
                @Html.ActionLink("Already have an account? Login", "Login", "Account", null, new { @class = "text-sm-right" })
            </div>
        </div>
    }
</body>
</html>
